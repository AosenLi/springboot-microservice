buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')

    }
}

plugins {
    id 'org.hidetake.swagger.generator' version '2.8.0'
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'org.springframework.boot'
    id 'docker'
}

group 'au.com.jiangren'
version '1.0-SNAPSHOT'

jar {
    baseName = 'spring-boot-microservice'
    version =  version
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile 'mysql:mysql-connector-java'
    // swagger
    compile("io.springfox:springfox-swagger2:2.7.0")
    compile("io.springfox:springfox-swagger-ui:2.7.0")

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("com.h2database:h2")

    // swagger
    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.2.3'
    swaggerUI 'org.webjars:swagger-ui:2.2.6'
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into "${stageDir}/target"
        }
    }
}

swaggerSources {
    spaceshuttle {
        inputFile = file('swagger/spaceshuttle.yml')
        code {
            language = 'spring'
            configFile = file('swagger/config.json')
        }
        ui {
            options.docExpansion = 'full'
        }
    }
}